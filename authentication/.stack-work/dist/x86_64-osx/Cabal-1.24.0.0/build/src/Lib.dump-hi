
==================== FINAL INTERFACE ====================
2016-12-03 16:12:07.252376 UTC

interface authentication-0.1.0.0-8onSPAAbPIAQ2kKTAecla:Lib 8001
  interface hash: 2d703bc9166c911e56d19b3e44fceb7a
  ABI hash: a293571c711178d79a63978adcd073c4
  export-list hash: b32919d1084554efeed9111b09e1c7a6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e8266cae4bd0841f3d456b79c41be9b1
  sig of: Nothing
  used TH splices: True
  where
exports:
  Lib.startApp
module dependencies:
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-6Lw6V3wDhf3KDMasjNOEeG
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-EQcMcRytfAYLVlu6sIj0XG
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-CgEg2S1gRb62uLfN2SPOVT
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      bytestring-conversion-0.3.1@bytestring-conversion-0.3.1-6dd5XW6QQRNFJaHktEXnXk
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FDS9muZSKvyFFsDxjwuYX9
                      containers-0.5.7.1@containers-0.5.7.1
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      double-conversion-2.0.1.0@double-conversion-2.0.1.0-JNbgVaWdXMzG3sbUcj3MFk
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      http-api-data-0.2.4@http-api-data-0.2.4-BSezjFNDPZP54hUMr0K0Jc
                      http-date-0.0.6.1@http-date-0.0.6.1-GxuKyJS3TPnDu1ymqrm6RW
                      http-media-0.6.4@http-media-0.6.4-Eg9CE4iTY9M8ET9NaQFStH
                      http-types-0.9.1@http-types-0.9.1-BTSIP6lzG5DE6u136Payws
                      http2-1.6.2@http2-1.6.2-E6MwuVxWBdwAP0MIIbjuDP integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AnUYMmJkgUZLmjf93DTg5F
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-6PuDgH21OiwGLI4QZ1g9kt
                      parsec-3.1.11@parsec-3.1.11-37j7M1YEHqtEooY7BpJdri
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.2@psqueues-0.2.2.2-AF2PAaCiaM8LpdVZ4uoLc3
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      scientific-0.3.4.9@scientific-0.3.4.9-ENrtAw13zTS8y4klTK3l4D
                      servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8
                      servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-3F5ilGqdpiI2CBV4Mk7gyK
                      string-conversions-0.4@string-conversions-0.4-2GQMrIKhBZAnCkSf0UD4s
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0 unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      vault-0.3.0.6@vault-0.3.0.6-5bJ8O372CGi2589QkJEjhz
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
                      wai-3.2.1.1@wai-3.2.1.1-CeM04LUPgYiCadXD3Mx7Tl
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-HKMjwxCytg7LqvFiJMknka
                      warp-3.2.9@warp-3.2.9-APAM7YmjqhL5pm77AcIQ1P
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         network-uri-2.6.1.0@network-uri-2.6.1.0-6PuDgH21OiwGLI4QZ1g9kt:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.API.ContentTypes
                         servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.API.Verbs
                         servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.Utils.Links
                         servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm:Servant.Server.Internal
                         servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson 281d2ab7daf86146b3b59970e2966e2e
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Encode.Builder 785396abd8aaaf9d1ba68236c856127a
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Encode.Functions fae9ec2454abc92c3a107658bba26ea5
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.TH 70ffd1aa3419836bb6da55c6ac93a31e
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Class 1dfffa4ea8ab7684e11894650e17978a
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Internal 985f2039d7a74c91ac24de1c822f78d5
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.Monoid 1efae021212a10c79fd75960dc0a1d99
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Char 3824744793840b1b7a48109a01ef7f24
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.IO.Handle.FD 13b7a4e1f414dd38346bde554423bf4b
import  -/  base-4.9.0.0:GHC.IO.Handle.Text 23b6dc4ed000f42bf105ce56bdeb0dc6
import  -/  base-4.9.0.0:GHC.IO.IOMode 9380a6a6b8c50facc225c4877c5e1e90
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  base-4.9.0.0:Text.ParserCombinators.ReadPrec 9512e2f4b227f507f87a150887202aed
import  -/  base-4.9.0.0:Text.Read.Lex fe3dd7b823826bf6870140c5363f9596
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder 1f806577e482e4384d42ada9a87b4578
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.Trans 0a058c68d8234a5f23a0f2e61a261faf
import  -/  servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.API.ContentTypes fc9f5a134f67a7a2b2f5268ea9c49600
import  -/  servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.API.Sub de0a4a1af491f9b06d84c9df9bd9d6ba
import  -/  servant-0.8.1@servant-0.8.1-2Lfu3iT6NY9GwP1pUbpLR8:Servant.API.Verbs ddfae4432911c0b5d62096abb5c426cf
import  -/  servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm:Servant 121b4d640204f5b9c50e351839689df0
import  -/  servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm:Servant.Server f91f5626217699c592818949e0123213
import  -/  servant-server-0.8.1@servant-server-0.8.1-DTDr2wV6leV4Fg8clVpyHm:Servant.Server.Internal ef959f4e97397aee7344bc92ba92947e
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text 1e73069de2859bae8530c14767b0c6af
import  -/  wai-3.2.1.1@wai-3.2.1.1-CeM04LUPgYiCadXD3Mx7Tl:Network.Wai d02afe6ee01f598a62b5b469db1aa2eb
import  -/  warp-3.2.9@warp-3.2.9-APAM7YmjqhL5pm77AcIQ1P:Network.Wai.Handler.Warp b479a8342ca3a79c820321f25afc8cc3
import  -/  warp-3.2.9@warp-3.2.9-APAM7YmjqhL5pm77AcIQ1P:Network.Wai.Handler.Warp.Run 79931c3f6eac34fe0d4931f7aac9bbc0
95d7067c9c91dade0f9ba49317a7186b
  $fEqKey :: GHC.Classes.Eq Lib.Key
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.Key Lib.$fEqKey_$c== Lib.$fEqKey_$c/= -}
95d7067c9c91dade0f9ba49317a7186b
  $fEqKey_$c/= :: Lib.Key -> Lib.Key -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><S(S(S)),1*U(1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.Key) (b :: Lib.Key) ->
                 case a of wild { Lib.Key a1 ->
                 case b of wild1 { Lib.Key b1 ->
                 case a1 of wild2 { GHC.Types.I# x ->
                 case b1 of wild3 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# x y) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
95d7067c9c91dade0f9ba49317a7186b
  $fEqKey_$c== :: Lib.Key -> Lib.Key -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><S(S(S)),1*U(1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Lib.Key) (ds1 :: Lib.Key) ->
                 case ds of wild { Lib.Key a1 ->
                 case ds1 of wild1 { Lib.Key b1 -> GHC.Classes.eqInt a1 b1 } }) -}
edb932f165b5a521eb96e52ba8a62384
  $fEqUser :: GHC.Classes.Eq Lib.User
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:. @ Lib.User Lib.$fEqUser_$c== Lib.$fEqUser_$c/= -}
edb932f165b5a521eb96e52ba8a62384
  $fEqUser_$c/= :: Lib.User -> Lib.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Lib.User) (b :: Lib.User) ->
                 case Lib.$fEqUser_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
edb932f165b5a521eb96e52ba8a62384
  $fEqUser_$c== :: Lib.User -> Lib.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lib.User) (w1 :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 case w1 of ww6 { Lib.User ww7 ww8 ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 Lib.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
edb932f165b5a521eb96e52ba8a62384
  $fFromJSONUser :: Data.Aeson.Types.Class.FromJSON Lib.User
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fFromJSONUser_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <Lib.User>_N)) -}
3aa73200f20509487e6de62c8bc0871a
  $fFromJSONUser1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "userLastName"#) -}
69ee8fd621dd725dc04a17d7f8db2ee7
  $fFromJSONUser2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "userFirstName"#) -}
9681630cdc65b2a77bda191fa168b6b1
  $fFromJSONUser3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "userId"#) -}
b0f59dc01996f22adf7cd87622d3ad8d
  $fFromJSONUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Object"#) -}
78d5dd7981a64379bcee4611090bc1e8
  $fFromJSONUser5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Lib.User"#) -}
c1d909aa2ac8a8581397850f33e978bd
  $fFromJSONUser6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User"#) -}
edb932f165b5a521eb96e52ba8a62384
  $fFromJSONUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.User
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (value :: Data.Aeson.Types.Internal.Value) ->
                 case value of wild {
                   DEFAULT
                   -> Data.Aeson.TH.parseTypeMismatch'
                        @ Lib.User
                        Lib.$fFromJSONUser6
                        Lib.$fFromJSONUser5
                        Lib.$fFromJSONUser4
                        (case wild of wild1 {
                           Data.Aeson.Types.Internal.Array ds1 -> Data.Aeson.TH.valueConName5
                           Data.Aeson.Types.Internal.String ds1 -> Data.Aeson.TH.valueConName4
                           Data.Aeson.Types.Internal.Number ds1 -> Data.Aeson.TH.valueConName3
                           Data.Aeson.Types.Internal.Bool ds1 -> Data.Aeson.TH.valueConName2
                           Data.Aeson.Types.Internal.Null -> Data.Aeson.TH.valueConName1 })
                   Data.Aeson.Types.Internal.Object recObj
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser GHC.Types.Int
                        = case Lib.$fFromJSONUser3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ GHC.Types.Int
                            Data.Aeson.Types.Instances.$fFromJSONInt_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <GHC.Types.Int>_N))
                            Lib.$fFromJSONUser5
                            Lib.$fFromJSONUser6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e :: Data.Aeson.Types.Internal.Parser GHC.Base.String
                        = case Lib.$fFromJSONUser2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONUser5
                            Lib.$fFromJSONUser6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      let {
                        e1 :: Data.Aeson.Types.Internal.Parser GHC.Base.String
                        = case Lib.$fFromJSONUser1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          Data.Aeson.TH.$w$clookupField
                            @ [GHC.Types.Char]
                            Data.Aeson.Types.Instances.$fFromJSON[]0_$cparseJSON
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <[GHC.Types.Char]>_N))
                            Lib.$fFromJSONUser5
                            Lib.$fFromJSONUser6
                            recObj
                            ww1
                            ww2
                            ww3 }
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success Lib.User f r) ->
                       m `cast` (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Types.Int>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a1 :: GHC.Types.Int) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Base.String>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a2 :: GHC.Base.String) ->
                             e1
                               `cast`
                             (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Base.String>_R)
                               @ f
                               @ r
                               path
                               kf
                               (\ (a4 :: GHC.Base.String) -> ks (Lib.User a1 a2 a4)))))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Lib.User>_R)) }) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey :: GHC.Read.Read Lib.Key
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Key
                  Lib.$fReadKey_$creadsPrec
                  Lib.$fReadKey_$creadList
                  Lib.$fReadKey_$creadPrec
                  Lib.$fReadKey_$creadListPrec -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Lib.Key] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Lib.Key] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Lib.Key
                   Lib.$fReadKey2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <Lib.Key>_R))
                   @ b
                   eta1) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.Key
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Lib.Key
                   Lib.$fReadKey3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Key>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.Key>_R)))) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.Key -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.Key -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec ww1 @ b w1 }) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey4 :: Text.ParserCombinators.ReadP.P [Lib.Key]
  {- Unfolding: (GHC.Read.$wlist
                   @ Lib.Key
                   Lib.$fReadKey2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <Lib.Key>_R))
                   @ [Lib.Key]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.Key])) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.Key]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.Key]
                   Lib.$fReadKey4) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.Key]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadKey1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.Key]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Lib.Key]>_R))) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Lib.Key
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadKey2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Lib.Key>_R)) -}
95d7067c9c91dade0f9ba49317a7186b
  $fReadKey_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.Key
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.Key
                   ((GHC.Read.$fReadDouble10
                       @ Lib.Key
                       Lib.$fReadKey3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Key>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <Lib.Key>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Key>_R)
                      @ Lib.Key
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure @ Lib.Key))) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken :: GHC.Read.Read Lib.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Token
                  Lib.$fReadToken_$creadsPrec
                  Lib.$fReadToken_$creadList
                  Lib.$fReadToken_$creadPrec
                  Lib.$fReadToken_$creadListPrec -}
6079edcda4b4765918f44e342e34442b
  $fReadToken1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Lib.Token] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Lib.Token] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ Lib.Token
                   Lib.$fReadToken2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <Lib.Token>_R))
                   @ b
                   eta1) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Lib.Token
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ Lib.Token
                   Lib.$fReadToken3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Token>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Lib.Token>_R)))) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Lib.Token -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Lib.Token -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lib.$w$creadPrec1 ww1 @ b w1 }) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken4 :: Text.ParserCombinators.ReadP.P [Lib.Token]
  {- Unfolding: (GHC.Read.$wlist
                   @ Lib.Token
                   Lib.$fReadToken2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0] <Lib.Token>_R))
                   @ [Lib.Token]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Lib.Token])) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Lib.Token]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Lib.Token]
                   Lib.$fReadToken4) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Lib.Token]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadToken1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <[Lib.Token]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Lib.Token]>_R))) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Lib.Token
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lib.$fReadToken2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Lib.Token>_R)) -}
6079edcda4b4765918f44e342e34442b
  $fReadToken_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Lib.Token
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Lib.Token
                   ((GHC.Read.$fReadDouble10
                       @ Lib.Token
                       Lib.$fReadToken3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Token>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Lib.Token>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Lib.Token>_R)
                      @ Lib.Token
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Lib.Token))) -}
95d7067c9c91dade0f9ba49317a7186b
  $fShowKey :: GHC.Show.Show Lib.Key
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Key
                  Lib.$fShowKey_$cshowsPrec
                  Lib.$fShowKey_$cshow
                  Lib.$fShowKey_$cshowList -}
95d7067c9c91dade0f9ba49317a7186b
  $fShowKey1 :: Lib.Key -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.Key) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Key ww1 -> Lib.$w$cshowsPrec 0# ww1 w1 }) -}
62871e60208c2d187e9b7f498167eea7
  $fShowKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
7d14fa31bce1bbbbd39559c8b45c3b02
  $fShowKey3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "key1 = "#) -}
669077f33a4eb1226b07a8f61904aba5
  $fShowKey4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Key {"#) -}
95d7067c9c91dade0f9ba49317a7186b
  $fShowKey_$cshow :: Lib.Key -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Key) ->
                 Lib.$fShowKey_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
95d7067c9c91dade0f9ba49317a7186b
  $fShowKey_$cshowList :: [Lib.Key] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Key Lib.$fShowKey1) -}
95d7067c9c91dade0f9ba49317a7186b
  $fShowKey_$cshowsPrec :: GHC.Types.Int -> Lib.Key -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Key) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Key ww3 ->
                 Lib.$w$cshowsPrec ww1 ww3 w2 } }) -}
6079edcda4b4765918f44e342e34442b
  $fShowToken :: GHC.Show.Show Lib.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Token
                  Lib.$fShowToken_$cshowsPrec
                  Lib.$fShowToken_$cshow
                  Lib.$fShowToken_$cshowList -}
6079edcda4b4765918f44e342e34442b
  $fShowToken1 :: Lib.Token -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.Token) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Token ww1 ww2 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
03c658e7d7be4d70ec5c4b1c460e2ab3
  $fShowToken2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Token {"#) -}
e96f779f1c034334a52b1b77ec952478
  $fShowToken3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "metadata = "#) -}
8b26481439499befd00b1244b29204a5
  $fShowToken4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
2ed161ae3659de7ee8c0612b19dfae37
  $fShowToken5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "key = "#) -}
6079edcda4b4765918f44e342e34442b
  $fShowToken_$cshow :: Lib.Token -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U(U)),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Token) ->
                 Lib.$fShowToken_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6079edcda4b4765918f44e342e34442b
  $fShowToken_$cshowList :: [Lib.Token] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Token Lib.$fShowToken1) -}
6079edcda4b4765918f44e342e34442b
  $fShowToken_$cshowsPrec ::
    GHC.Types.Int -> Lib.Token -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U(U)),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.Token)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Token ww3 ww4 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
edb932f165b5a521eb96e52ba8a62384
  $fShowUser :: GHC.Show.Show Lib.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.User
                  Lib.$fShowUser_$cshowsPrec
                  Lib.$fShowUser_$cshow
                  Lib.$fShowUser_$cshowList -}
edb932f165b5a521eb96e52ba8a62384
  $fShowUser1 :: Lib.User -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.User) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.User ww1 ww2 ww3 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 w1 }) -}
cdaa21e0ed3a4e38c555d61203479a55
  $fShowUser2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User {"#) -}
d62dfda25700939519010d0d8d28514d
  $fShowUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userLastName = "#) -}
868b866ae970ee514f9b32edd3834dfd
  $fShowUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userFirstName = "#) -}
17535f4cbabf900b3877c4c2138c7ed5
  $fShowUser5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId = "#) -}
edb932f165b5a521eb96e52ba8a62384
  $fShowUser_$cshow :: Lib.User -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.User) ->
                 Lib.$fShowUser_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
edb932f165b5a521eb96e52ba8a62384
  $fShowUser_$cshowList :: [Lib.User] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.User Lib.$fShowUser1) -}
edb932f165b5a521eb96e52ba8a62384
  $fShowUser_$cshowsPrec ::
    GHC.Types.Int -> Lib.User -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.User) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.User ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 w2 } }) -}
edb932f165b5a521eb96e52ba8a62384
  $fToJSONUser :: Data.Aeson.Types.Class.ToJSON Lib.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.User
                  Lib.$fToJSONUser_$ctoJSON
                  Lib.$fToJSONUser_$ctoEncoding -}
ad7e140b812882c9d35cc4be343c8669
  $fToJSONUser1 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
edb932f165b5a521eb96e52ba8a62384
  $fToJSONUser_$ctoEncoding ::
    Lib.User -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U(U),U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ww3 ->
                 Lib.$w$ctoEncoding ww1 ww2 ww3 }) -}
edb932f165b5a521eb96e52ba8a62384
  $fToJSONUser_$ctoJSON ::
    Lib.User -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lib.User) ->
                 case w of ww { Lib.User ww1 ww2 ww3 ->
                 case Lib.$w$ctoJSON ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
5a3341b10dc9079311b3a8515438f141
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] [Lib.User]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Lib.User]
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [Lib.User]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ [Lib.User]
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Lib.$s$fAllCTRender:a_$dAllMimeRender) -}
d809b092286e16c875e419deb3363088
  $s$fAllCTRender:a_$dAllMimeRender ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [Lib.User]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
ce13d5ddc7afe983b758b4e7996b39b1
  $s$fAllCTRender:a_$dMimeRender ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [Lib.User]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
30d0e25c8c370b84d7fe7e3a324e0cef
  $s$fAllCTRender:a_$dToJSON ::
    Data.Aeson.Types.Class.ToJSON [Lib.User]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Lib.$s$fAllCTRender:a_$s$fToJSON[] -}
12229cb6d38a5896b5911b35c9b1bdec
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] [Lib.User]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ [Lib.User]
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ [Lib.User]
                     Lib.$s$fAllCTRender:a_$dMimeRender)
                  Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender -}
baf14a424e086880f747aa0c58a23e5d
  $s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> [Lib.User]
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: [Lib.User]) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   ((Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                       @ [Lib.User]
                       Lib.$s$fAllCTRender:a_$dToJSON)
                      `cast`
                    (Servant.API.ContentTypes.N:Accept[0]
                         <GHC.Types.*>_N <Servant.API.ContentTypes.JSON>_N)
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON),
                    Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
                      (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                      eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
ada5d6e819cf17f972ec4f024218e829
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON [Lib.User]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [Lib.User]
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ [Lib.User]
                     Lib.$s$fAllCTRender:a_$dToJSON)
                  Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
ff175cfab20586f172f5f650fc759164
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> [Lib.User] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: [Lib.User]) ->
                 Data.ByteString.Builder.toLazyByteString
                   (case eta of wild {
                      []
                      -> Data.Aeson.Types.Internal.fromEncoding
                           Data.Aeson.Encode.Builder.emptyArray_
                      : x xs
                      -> Data.Aeson.Types.Internal.fromEncoding
                           (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.ByteString.Builder.Internal.Builder
                              @ Data.Aeson.Types.Internal.Encoding
                              (\ (tpl :: Data.ByteString.Builder.Internal.Builder) -> tpl)
                                `cast`
                              (<Data.ByteString.Builder.Internal.Builder>_R
                               ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0]))
                              (Data.ByteString.Builder.Internal.append
                                 (Data.ByteString.Builder.Prim.primBounded
                                    @ GHC.Types.Char
                                    (Data.ByteString.Builder.Prim.Internal.toB
                                       @ GHC.Types.Char
                                       Data.ByteString.Builder.Prim.ASCII.char7)
                                    (GHC.Types.C# '['#))
                                 (Data.ByteString.Builder.Internal.append
                                    (Data.Aeson.Types.Internal.fromEncoding
                                       (Lib.$fToJSONUser_$ctoEncoding x))
                                    (Data.ByteString.Builder.Internal.append
                                       (GHC.Base.foldr
                                          @ Lib.User
                                          @ Data.ByteString.Builder.Internal.Builder
                                          (\ (v :: Lib.User)
                                             (vs :: Data.ByteString.Builder.Internal.Builder)[OneShot] ->
                                           Data.ByteString.Builder.Internal.append
                                             (Data.ByteString.Builder.Prim.primBounded
                                                @ GHC.Types.Char
                                                (Data.ByteString.Builder.Prim.Internal.toB
                                                   @ GHC.Types.Char
                                                   Data.ByteString.Builder.Prim.ASCII.char7)
                                                (GHC.Types.C# ','#))
                                             (Data.ByteString.Builder.Internal.append
                                                (Data.Aeson.Types.Internal.fromEncoding
                                                   (Lib.$fToJSONUser_$ctoEncoding v))
                                                vs))
                                          Data.ByteString.Builder.Internal.empty
                                          xs)
                                       (Data.ByteString.Builder.Prim.primBounded
                                          @ GHC.Types.Char
                                          (Data.ByteString.Builder.Prim.Internal.toB
                                             @ GHC.Types.Char
                                             Data.ByteString.Builder.Prim.ASCII.char7)
                                          (GHC.Types.C# ']'#)))))) })) -}
d1cacd429ab07c3528b265ecbcd0f7c8
  $s$fAllCTRender:a_$s$fToJSON[] ::
    Data.Aeson.Types.Class.ToJSON [Lib.User]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Lib.User]
                  (\ (eta :: [Lib.User]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ Lib.User
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ Lib.User
                                         c
                                         Lib.$fToJSONUser_$ctoJSON)
                                      n
                                      eta)))) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt })
                  (Data.Aeson.Types.Instances.$fToJSON[]_$ctoEncoding
                     @ Lib.User
                     Lib.$fToJSONUser) -}
b8245e631a88ca90d7028246c36e18d2
  $sserve3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
9cc20c8eb27de67fd185d2b97093dc02
  $sserve4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Lib.$sserve5
                   0#
                   ipv }) -}
9ee6920580b8b3980a84546bf81cc6b3
  $sserve5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "users"#) -}
f04348c6b232a31a0dc97282f4f3aa43
  $tc'Key :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   738315647996737792##
                   15468568655089524510##
                   Lib.$trModule
                   Lib.$tc'Key1) -}
e2feb79d81670d3a96b102cf722bf07d
  $tc'Key1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Key"#) -}
7a964f0e13398e2c8e24a1bbac0accf7
  $tc'Token :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14217694865129048185##
                   1574937186396373674##
                   Lib.$trModule
                   Lib.$tc'Token1) -}
171b632050a1f37761bccada52e9c827
  $tc'Token1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Token"#) -}
3516a68917ea1ce623b14c7da6439604
  $tc'User :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9830073461070762805##
                   13723827026520489878##
                   Lib.$trModule
                   Lib.$tc'User1) -}
1c86acd24640da47729446f213e47104
  $tc'User1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'User"#) -}
2cd8b9ae80a86777ec4926a20077304d
  $tcKey :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9073768866026471321##
                   11991018540323484990##
                   Lib.$trModule
                   Lib.$tcKey1) -}
a42216e4f38c064d1951824f78ed002e
  $tcKey1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Key"#) -}
4d60509d1cb1564b4283ce0944871b92
  $tcToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15131754288561040181##
                   10765661997565344969##
                   Lib.$trModule
                   Lib.$tcToken1) -}
cf79e35fde624a20e75a7bc5146bf3b8
  $tcToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Token"#) -}
bd30e478eec1b28774fb1d1e22b6c874
  $tcUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11649398544574973981##
                   11852917117927683931##
                   Lib.$trModule
                   Lib.$tcUser1) -}
5c336d55d53793ff4ea26fea8c02ea60
  $tcUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "User"#) -}
22da5698bae6742956f0ae80d268ac39
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
4f5fea9096a2d9e18936ff3738d5f408
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
d2e247d81c112b52ebaa151bf4ec5b08
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "authentication-0.1.0.0-8onSPAAbPIAQ2kKTAecla"#) -}
0b7262571a794083bd9ca7b808912115
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Base.eqString ww2 ww5 } }) -}
95d7067c9c91dade0f9ba49317a7186b
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.Key -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
6079edcda4b4765918f44e342e34442b
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (Lib.Token -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
b7a6dc85bd4fc3b602451bc6d605e974
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowKey4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowKey3
                          (case ww1 of ww2 { GHC.Types.I# ww3 ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  ww3
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Lib.$fShowKey2
                                     x) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 } }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
3b0d968adc2bae9ceabd1ded98a4fec0
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Lib.Key -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(1*U(U))><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lib.Key)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowToken5
                       (case ww1 of ww3 { Lib.Key ww4 ->
                        Lib.$w$cshowsPrec
                          0#
                          ww4
                          (GHC.Base.++
                             @ GHC.Types.Char
                             Lib.$fShowToken4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowToken3
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Show.showLitString
                                      ww2
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows8
                                         (GHC.Base.++ @ GHC.Types.Char Lib.$fShowKey2 x)))))) })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Lib.$fShowToken2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowToken2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w))) }) -}
037252d097334885116eb7273fae4501
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U)><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowUser5
                       (case ww1 of ww4 { GHC.Types.I# ww5 ->
                        case GHC.Show.$wshowSignedInt
                               0#
                               ww5
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  Lib.$fShowToken4
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Lib.$fShowUser4
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows8
                                        (GHC.Show.showLitString
                                           ww2
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows8
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 Lib.$fShowToken4
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Lib.$fShowUser3
                                                    (GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.shows8
                                                       (GHC.Show.showLitString
                                                          ww3
                                                          (GHC.Types.:
                                                             @ GHC.Types.Char
                                                             GHC.Show.shows8
                                                             (GHC.Base.++
                                                                @ GHC.Types.Char
                                                                Lib.$fShowKey2
                                                                x))))))))))) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Types.: @ GHC.Types.Char ww7 ww8 } })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Lib.$fShowUser2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowUser2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w))) }) -}
69c53c741714c8f54152a15bd6d53230
  $w$ctoEncoding ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 3, Strictness: <L,U(U)><L,U><L,U>, Inline: [0] -}
808c09c747489858ebc53c44a2c14049
  $w$ctoJSON ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Lib.$fFromJSONUser3,
                            case ww of wild { GHC.Types.I# i ->
                            case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                            Data.Aeson.Types.Internal.Number
                              (Data.Scientific.Scientific dt 0#) } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Lib.$fFromJSONUser2,
                               case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ Data.Text.Internal.Text
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              8#
                                              s1 of ds1 { (#,#) ipv ipv1 ->
                                       Lib.$wouter1
                                         (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                         Lib.$fToJSONUser1
                                         ww1
                                         0#
                                         ipv }) of ds1 { (#,#) ipv ipv1 ->
                               case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Aeson.Types.Internal.String dt } })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Lib.$fFromJSONUser1,
                                  case GHC.Magic.runRW#
                                         @ 'GHC.Types.PtrRepLifted
                                         @ Data.Text.Internal.Text
                                         (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                          case GHC.Prim.newByteArray#
                                                 @ GHC.Prim.RealWorld
                                                 8#
                                                 s1 of ds1 { (#,#) ipv ipv1 ->
                                          Lib.$wouter
                                            (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                            Lib.$fToJSONUser1
                                            ww2
                                            0#
                                            ipv }) of ds1 { (#,#) ipv ipv1 ->
                                  case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                                  Data.Aeson.Types.Internal.String dt } })
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
4b2898af4f5bbec70b57d8aff2b6eb81
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
28b4ccdff609b19b24807aa55d465a4a
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
2229f6e757804a72baf27ce20d7423ae
  type API =
    "users"
    Servant.API.Sub.:> Servant.API.Verbs.Get
                         '[Servant.API.ContentTypes.JSON] [Lib.User]
95d7067c9c91dade0f9ba49317a7186b
  data Key = Key {key1 :: GHC.Types.Int}
6079edcda4b4765918f44e342e34442b
  data Token = Token {key :: Lib.Key, metadata :: GHC.Base.String}
edb932f165b5a521eb96e52ba8a62384
  data User
    = User {userId :: GHC.Types.Int,
            userFirstName :: GHC.Base.String,
            userLastName :: GHC.Base.String}
f37402ad3c4166e999807596c1de0f3b
  key :: Lib.Token -> Lib.Key
  RecSel Left Lib.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Token) ->
                 case ds of wild { Lib.Token ds1 ds2 -> ds1 }) -}
fab04f7ed7101a451f8e366cba07a977
  key1 :: Lib.Key -> GHC.Types.Int
  RecSel Left Lib.Key
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Key) -> case ds of wild { Lib.Key ds1 -> ds1 }) -}
b486be30a946f235201cf5bb217e3243
  metadata :: Lib.Token -> GHC.Base.String
  RecSel Left Lib.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Token) ->
                 case ds of wild { Lib.Token ds1 ds2 -> ds2 }) -}
637aa7938c1347dd79e898b96b47a2ad
  startApp :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.startApp1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
058685b2aa3057457e6784d1f1f6664a
  startApp1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta1 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 Network.Wai.Handler.Warp.Run.$wrunSettings
                   Lib.startApp21
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Lib.startApp2
                   eta1) -}
cdd6d459086d590468f390431064ba73
  startApp10 :: [Lib.User]
  {- Unfolding: (GHC.Types.:
                   @ Lib.User
                   Lib.startApp16
                   Lib.startApp11) -}
b8a1d946844654ce20f9418a572d6be2
  startApp11 :: [Lib.User]
  {- Unfolding: (GHC.Types.:
                   @ Lib.User
                   Lib.startApp12
                   (GHC.Types.[] @ Lib.User)) -}
65cabc5b2954dce62325de402685dc97
  startApp12 :: Lib.User
  {- Unfolding: (Lib.User
                   Lib.startApp15
                   Lib.startApp14
                   Lib.startApp13) -}
7e287209a97ae45ffafbac470953ef2e
  startApp13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Einstein"#) -}
815b101d2c40b482ec8b5f009a5ae952
  startApp14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Albert"#) -}
ecec75068b6bfca805d8cc151a79f959
  startApp15 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
b228519e10dbdf7ba0e3810dc910fd89
  startApp16 :: Lib.User
  {- Unfolding: (Lib.User
                   Lib.startApp19
                   Lib.startApp18
                   Lib.startApp17) -}
351c9d2956b254820c866104beea15a2
  startApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Newton"#) -}
72ea6d74012816dd2e51870853b3f816
  startApp18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Isaac"#) -}
7e6867ab98a73eea3d02d8b6f075a94b
  startApp19 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
b9322cbe3c7a59a447d3dd18b92d0a93
  startApp2 :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   Lib.startApp3) -}
c83030e8b9a182d078da46fc62558948
  startApp20 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            [Lib.User]))
    -> Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ [Lib.User]
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Lib.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Lib.$sserve3
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           [Lib.User]))) -}
bc85f6e67af376a84638ef8ccfc30f72
  startApp21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8080#) -}
e36a88c2efa069205fd8d6500108d2e3
  startApp3 ::
    Network.Wai.Internal.Request
    -> (Servant.Server.Internal.RoutingApplication.RouteResult
          Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 2,
     Unfolding: (\ (eta :: Network.Wai.Internal.Request)
                   (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                              Network.Wai.Internal.Response
                            -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                 Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   Lib.startApp_r
                   GHC.Tuple.()
                   eta
                   eta1) -}
0d2ff7b37436625b1fb8c7f11fa9cf3f
  startApp4 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Lib.$sserve4 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Lib.startApp5
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
381f3bee5fd5008e63b8ca7223717274
  startApp5 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Lib.startApp20
                   Lib.startApp6
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"users">_N
                                <Servant.API.Verbs.Verb
                                   'Network.HTTP.Types.Method.GET
                                   200
                                   '[Servant.API.ContentTypes.JSON]
                                   [Lib.User]>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
f86ef5ae6870f015c02a031326a8e24c
  startApp6 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      () (Servant.Server.Internal.Server Lib.API)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server Lib.API)
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Lib.startApp7) -}
b540ee8a2232c6374598e80e00181484
  startApp7 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server Lib.API)
  {- Arity: 4,
     Unfolding: (\ (ds :: ())
                   (ds1 :: ())
                   (ds2 :: ())
                   (ds3 :: Network.Wai.Internal.Request) ->
                 Lib.startApp_result) -}
e361e0a7170240575f4cf1af4e986c05
  startApp8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr [Lib.User] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Lib.startApp9 #)) -}
fc734555b709ef7af3d3bb66c062a23f
  startApp9 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr [Lib.User]
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ [Lib.User]
                   Lib.startApp10) -}
ad4683e1b116fb05b2024dea7f36e908
  startApp_r :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Lib.startApp4
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
b07b04a02dfb6adbe4985797c4915854
  startApp_result ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server Lib.API)
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server Lib.API)
                   Lib.startApp8
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     Servant.Server.Internal.ServantErr.ServantErr [Lib.User]>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <[Lib.User]>_N))
                             (Trans
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                 <Network.HTTP.Types.Method.StdMethod>_N
                                                 <'[Servant.API.ContentTypes.JSON]>_N
                                                 <[Lib.User]>_N
                                                 <'Network.HTTP.Types.Method.GET>_N
                                                 <200>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N)))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                 <*>_N
                                                 <"users">_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.GET
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    [Lib.User]>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))))) -}
73909e32a700baee3eefb487f9f65ba6
  userFirstName :: Lib.User -> GHC.Base.String
  RecSel Left Lib.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.User) ->
                 case ds of wild { Lib.User ds1 ds2 ds3 -> ds2 }) -}
bff6d349230d3416b0ddf5291e18a47f
  userId :: Lib.User -> GHC.Types.Int
  RecSel Left Lib.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.User) ->
                 case ds of wild { Lib.User ds1 ds2 ds3 -> ds1 }) -}
49476b2429f40ded52d5d8e957eb0b8f
  userLastName :: Lib.User -> GHC.Base.String
  RecSel Left Lib.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.User) ->
                 case ds of wild { Lib.User ds1 ds2 ds3 -> ds3 }) -}
instance GHC.Classes.Eq [Lib.Key] = Lib.$fEqKey
instance GHC.Classes.Eq [Lib.User] = Lib.$fEqUser
instance Data.Aeson.Types.Class.FromJSON [Lib.User]
  = Lib.$fFromJSONUser
instance GHC.Read.Read [Lib.Key] = Lib.$fReadKey
instance GHC.Read.Read [Lib.Token] = Lib.$fReadToken
instance GHC.Show.Show [Lib.Key] = Lib.$fShowKey
instance GHC.Show.Show [Lib.Token] = Lib.$fShowToken
instance GHC.Show.Show [Lib.User] = Lib.$fShowUser
instance Data.Aeson.Types.Class.ToJSON [Lib.User]
  = Lib.$fToJSONUser
"SPEC/Lib $fAllCTRender:a @ JSON @ '[] @ [User]" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                Servant.API.ContentTypes.JSON)
                                                                 ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                 '[])
                                                                 ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                       [Lib.User])
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ [Lib.User]
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Lib.$s$fAllCTRender:a
"SPEC/Lib $fAllMimeRender:a0 @ JSON @ [User]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                 Servant.API.ContentTypes.JSON
                                                                                 [Lib.User])
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ [Lib.User]
                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/Lib $fAllMimeRender:a0_$callMimeRender @ JSON @ [User]" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                                 Servant.API.ContentTypes.JSON
                                                                                                 [Lib.User])
  Servant.API.ContentTypes.$fAllMimeRender:a0_$callMimeRender @ Servant.API.ContentTypes.JSON
                                                              @ [Lib.User]
                                                              $dMimeRender
  = Lib.$s$fAllCTRender:a_$s$fAllMimeRender:a0_$callMimeRender
"SPEC/Lib $fMimeRenderTYPEJSONa @ [User]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                         [Lib.User])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ [Lib.User]
                                                 $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/Lib $fMimeRenderTYPEJSONa_$cmimeRender @ [User]" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                                                      [Lib.User])
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ [Lib.User]
                                                              $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/Lib $fToJSON[] @ User" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                            Lib.User)
  Data.Aeson.Types.Instances.$fToJSON[] @ Lib.User $dToJSON
  = Lib.$s$fAllCTRender:a_$s$fToJSON[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

